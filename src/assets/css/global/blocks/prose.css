/* Based on Andy Bell, https://github.com/Andy-set-studio/personal-site-eleventy */

.prose {
  --flow-space: var(--space-m);
  --wrapper-width: 64rem;
}

.prose :is(pre, pre + *, figure, picture) {
  --flow-space: var(--space-m-l);
}

.prose :is(figure + *, picture + *) {
  --flow-space: var(--space-xl);
}

.prose :is(h2, h3, h4) {
  --flow-space: 1.5em;
}

.prose :is(h2 + *, h3 + *, h4 + *):not(figure) {
  --flow-space: var(--space-l);
}

.prose .heading-anchor:where(:hover, :focus) {
  text-decoration: none;
}

.prose .heading-anchor {
  text-decoration: none;
}

.prose mark {
  background-color: var(--color-tertiary);
  color: var(--color-base-dark);
}

/* block space only for "regular lists" */
.prose :not(.cluster):not(.grid) > li + li {
  padding-block-start: var(--space-s-m);
}

/* inline space only for "regular lists" */
.prose :where(ul:not(.grid), ol:not(.grid)) {
  padding-inline-start: 1.5ch;
}

/* marker only for "regular lists" */
.prose :where(ul:not(.grid):not([role='list'])) li::marker {
  color: var(--color-primary);
  content: 'â€“ ';
}

.prose ol li::marker {
  color: var(--color-primary);
}

.prose img {
  border-radius: var(--border-radius-medium);
}

@media screen(ltsm) {
  .prose > *,
  .prose a {
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
    /* Adds a hyphen where the word breaks, if supported (No Blink) */
    hyphens: auto;
  }
}