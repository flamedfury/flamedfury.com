name: "Flamed Fury: Build and Deploy"

on:
  schedule:
    - cron: 0 2/6 * * *
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: "Flamed Fury: Build and Deploy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Eleventy
        uses: actions/cache@v4
        with:
          path: |
            .cache
            dist/assets/images
          key: ${{ runner.os }}-eleventy-${{ hashFiles('src/**/*.{js,json,md,njk}', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-eleventy-

      - name: Build website
        run: |
          set -e
          npm install
          npm run build
        env:
          OMG_LOL_KEY: ${{ secrets.OMG_LOL_KEY }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          STEAM_KEY: ${{ secrets.STEAM_KEY }}
          STEAM_ID: ${{ secrets.STEAM_ID }}
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          TRAKT_API_KEY: ${{ secrets.TRAKT_API_KEY }}
          TRAKT_KEY: ${{ secrets.TRAKT_KEY }}
          TVDB_API_KEY: ${{ secrets.TVDB_API_KEY }}
          WEBMENTION_IO_TOKEN: ${{ secrets.WEBMENTION_IO_TOKEN }}
          LISTENBRAINZ_USER: ${{ secrets.LISTENBRAINZ_USER }}
          DISCOGS_TOKEN: ${{ secrets.DISCOGS_TOKEN }}
          DISCOGS_USER_AGENT: ${{ secrets.USER_AGENT }}

      - name: Deploy website to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          # Test SSH connection first
          ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"
          rsync -avzr --delete --size-only -e "ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519" ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/flamedfury.com/

